<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.machineFile org.eventb.core.configuration="org.eventb.core.fwd;de.prob.units.mchBase" version="5">
<org.eventb.core.event name="'" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="INITIALISATION">
<org.eventb.core.action name="'" org.eventb.core.assignment="lift_request_pool ≔ ∅" org.eventb.core.comment="No one is currently waiting for a lift" org.eventb.core.label="act10"/>
<org.eventb.core.action name="(" org.eventb.core.assignment="floor_request_pool ≔ ∅" org.eventb.core.comment="No one is currently inside the lift waiting to arrive at their destination" org.eventb.core.label="act11"/>
</org.eventb.core.event>
<org.eventb.core.seesContext name="(" org.eventb.core.target="SchedulingContext"/>
<org.eventb.core.refinesMachine name=")" org.eventb.core.target="ButtonsMachine"/>
<org.eventb.core.variable de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="/" org.eventb.core.identifier="lift_states"/>
<org.eventb.core.variable de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="0" org.eventb.core.identifier="lift_movement_directions"/>
<org.eventb.core.variable de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="2" org.eventb.core.identifier="lift_door_states"/>
<org.eventb.core.variable de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="3" org.eventb.core.identifier="floor_door_states"/>
<org.eventb.core.variable de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="4" org.eventb.core.identifier="lift_buttons_states"/>
<org.eventb.core.variable de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="E" org.eventb.core.identifier="lift_current_floor"/>
<org.eventb.core.variable de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="5" org.eventb.core.identifier="floor_buttons_states"/>
<org.eventb.core.event name="6" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="activate_lift">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="activate_lift"/>
<org.eventb.core.guard name="," org.eventb.core.label="grd5" org.eventb.core.predicate="lift∈LIFTS"/>
<org.eventb.core.guard name="-" org.eventb.core.label="grd6" org.eventb.core.predicate="card(ran({lift}◁lift_request_pool))&gt;0&#13;&#10;∨&#13;&#10;card(floor_request_pool)&gt;0"/>
<org.eventb.core.guard name="(" org.eventb.core.comment="Only activates if there are no lifts that are currently heading toward the request" org.eventb.core.label="grd2" org.eventb.core.predicate="card(ran({lift}◁lift_request_pool))&gt;0&#13;&#10;∨&#13;&#10;(&#13;&#10;&#9;∀request·request∈dom(floor_request_pool) ⇒ (&#13;&#10;&#9;&#9;&#9;∀other_lift·other_lift∈LIFTS∧other_lift ≠ lift ⇒ (&#13;&#10;&#9;&#9;&#9;&#9;(request &lt; lift_current_floor(other_lift) ∧ lift_movement_directions(other_lift) ≠ DOWN) &#13;&#10;&#9;&#9;&#9;&#9;∨&#13;&#10;&#9;&#9;&#9;&#9;(request &gt; lift_current_floor(other_lift) ∧ lift_movement_directions(other_lift) ≠ UP)&#13;&#10;&#9;&#9;&#9;)&#13;&#10;&#9;)&#13;&#10;)"/>
<org.eventb.core.guard name="+" org.eventb.core.comment="If there are other lifts that can be activated, the lift with the highest priority activates" org.eventb.core.label="grd4" org.eventb.core.predicate="card(ran({lift}◁lift_request_pool))&gt;0 &#13;&#10;∨&#13;&#10;(&#13;&#10;&#9;∀other_lift·other_lift∈LIFTS∧other_lift≠lift∧lift_current_floor(other_lift)=lift_current_floor(lift)⇒&#13;&#10;&#9;&#9;LIFT_PRIORITIES(lift) &gt; LIFT_PRIORITIES(other_lift)&#13;&#10;)"/>
</org.eventb.core.event>
<org.eventb.core.event name="7" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="deactivate_lift">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="deactivate_lift"/>
<org.eventb.core.parameter name="'" org.eventb.core.identifier="lift"/>
<org.eventb.core.guard name="internal1" org.eventb.core.label="grd1" org.eventb.core.predicate="lift_states(lift) = STOPPED"/>
<org.eventb.core.action name=")" org.eventb.core.assignment="lift_states(lift) ≔ IDLE" org.eventb.core.label="act1"/>
<org.eventb.core.guard name="+" org.eventb.core.label="grd5" org.eventb.core.predicate="lift∈LIFTS"/>
<org.eventb.core.guard name="internal2" org.eventb.core.label="grd6" org.eventb.core.predicate="card(ran({lift} ◁ lift_request_pool)) = 0"/>
<org.eventb.core.guard name="(" org.eventb.core.comment="Only deactivates if all other lifts are heading toward a floor request" org.eventb.core.label="grd2" org.eventb.core.predicate="∀request·request∈dom(floor_request_pool) ⇒&#13;&#10;&#9;(&#13;&#10;&#9;&#9;∃other_lift·other_lift∈LIFTS∧other_lift ≠ lift ⇒&#13;&#10;&#9;&#9;&#9;(request &lt; lift_current_floor(other_lift) ∧ lift_movement_directions(other_lift) = DOWN) &#13;&#10;&#9;&#9;&#9;∨&#13;&#10;&#9;&#9;&#9;(request &gt; lift_current_floor(other_lift) ∧ lift_movement_directions(other_lift) = UP)&#13;&#10;&#9;)"/>
<org.eventb.core.guard name=")" org.eventb.core.comment="If there is another lift that can be deactivated, the one with the lowest priority deactivates" org.eventb.core.label="grd3" org.eventb.core.predicate="∀other_lift·other_lift∈LIFTS∧other_lift≠lift∧lift_current_floor(other_lift)=lift_current_floor(lift)⇒&#13;&#10;&#9;LIFT_PRIORITIES(lift) &lt; LIFT_PRIORITIES(other_lift)"/>
<org.eventb.core.guard name="*" org.eventb.core.comment="&#13;&#10;" org.eventb.core.label="grd4" org.eventb.core.predicate="∀other_lift·other_lift∈LIFTS∧other_lift≠lift∧lift_states(other_lift)≠IDLE⇒&#13;&#10;&#9;(&#13;&#10;&#9;&#9;∀request·request∈dom((floor_request_pool▷{lift_movement_directions(other_lift)})) ⇒&#13;&#10;&#9;&#9;&#9;(&#13;&#10;&#9;&#9;&#9;&#9;lift_current_floor(other_lift)&lt;request&#13;&#10;&#9;&#9;&#9;&#9;∨&#13;&#10;&#9;&#9;&#9;&#9;lift_current_floor(other_lift)&gt;request&#13;&#10;&#9;&#9;&#9;)&#13;&#10;&#9;)"/>
</org.eventb.core.event>
<org.eventb.core.event name="8" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="start_lift">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="start_lift"/>
</org.eventb.core.event>
<org.eventb.core.event name="9" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="stop_lift">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="stop_lift"/>
<org.eventb.core.guard name="(" org.eventb.core.comment="There has to either be a person waiting to get into the lift or someone inside the lift waiting to get off at the current floor" org.eventb.core.label="grd3" org.eventb.core.predicate="(&#13;&#10;&#9;∃request_floor·request_floor∈ran({lift}◁lift_request_pool) ⇒ ( &#13;&#10;&#9;&#9;request_floor=lift_current_floor(lift)&#13;&#10;&#9;)&#13;&#10;)&#13;&#10;∨&#13;&#10;(&#13;&#10;&#9;∃request_direction·request_direction∈ran({lift_current_floor(lift)}◁floor_request_pool) ⇒ (&#13;&#10;&#9;&#9;lift_movement_directions(lift)=request_direction&#13;&#10;&#9;)&#13;&#10;)"/>
</org.eventb.core.event>
<org.eventb.core.event name=":" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="move_lift">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="move_lift"/>
<org.eventb.core.guard name="(" org.eventb.core.label="grd10" org.eventb.core.predicate="(&#13;&#10;&#9;∀request_floor·request_floor∈ran({lift}◁lift_request_pool)⇒ (&#13;&#10;&#9;&#9;request_floor ≠ lift_current_floor(lift)&#13;&#10;&#9;)&#13;&#10;)&#13;&#10;∧&#13;&#10;(&#13;&#10;&#9;∀request_direction·request_direction∈ran({lift_current_floor(lift)}◁floor_request_pool) ⇒ (&#13;&#10;&#9;&#9;request_direction ≠ lift_movement_directions(lift)&#13;&#10;&#9;)&#13;&#10;)"/>
</org.eventb.core.event>
<org.eventb.core.event name=";" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="change_lift_direction">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="change_lift_direction"/>
<org.eventb.core.guard name=")" org.eventb.core.label="grd3" org.eventb.core.predicate="lift_states(lift) ≠ IDLE"/>
<org.eventb.core.guard name="(" org.eventb.core.comment="Only change directions when there is no reason to go in the direction" org.eventb.core.label="grd2" org.eventb.core.predicate="∀request_floor·request_floor∈ran({lift} ◁ lift_request_pool)⇒&#13;&#10;&#9;(&#13;&#10;&#9;&#9;(request_floor &lt; lift_current_floor(lift) ∧ lift_movement_directions(lift) = UP)&#13;&#10;&#9;&#9;&#9;∨&#13;&#10;&#9;&#9;(request_floor &gt; lift_current_floor(lift) ∧ lift_movement_directions(lift) = DOWN)&#13;&#10;&#9;)"/>
</org.eventb.core.event>
<org.eventb.core.event name="=" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="open_lift_door">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="open_lift_door"/>
</org.eventb.core.event>
<org.eventb.core.event name="&gt;" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="close_lift_door">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="close_lift_door"/>
</org.eventb.core.event>
<org.eventb.core.event name="?" org.eventb.core.comment="Open the door and deactivate all requests that were associated with the floor" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="open_floor_door">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="open_floor_door"/>
</org.eventb.core.event>
<org.eventb.core.event name="@" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="close_floor_door">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="close_floor_door"/>
</org.eventb.core.event>
<org.eventb.core.event name="B" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="activate_lift_button">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="activate_lift_button"/>
<org.eventb.core.action name="(" org.eventb.core.assignment="lift_request_pool ≔ lift_request_pool  {lift ↦ floor}" org.eventb.core.label="act2"/>
</org.eventb.core.event>
<org.eventb.core.event name="D" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="deactivate_lift_button">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="deactivate_lift_button"/>
<org.eventb.core.action name="(" org.eventb.core.assignment="lift_request_pool ≔ lift_request_pool ∖ {lift ↦ floor}" org.eventb.core.label="act2"/>
</org.eventb.core.event>
<org.eventb.core.event name="A" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="activate_floor_button">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="activate_floor_button"/>
<org.eventb.core.action name="(" org.eventb.core.assignment="floor_request_pool ≔ floor_request_pool  {floor ↦ direction}" org.eventb.core.comment="Add the request to the request pool" org.eventb.core.label="act2"/>
</org.eventb.core.event>
<org.eventb.core.event name="C" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="deactivate_floor_button">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="deactivate_floor_button"/>
<org.eventb.core.action name="(" org.eventb.core.assignment="floor_request_pool ≔ floor_request_pool ∖ {floor ↦ direction}" org.eventb.core.label="act2"/>
</org.eventb.core.event>
<org.eventb.core.invariant name="F" org.eventb.core.comment="Mapping for each lift, to some destination floor" org.eventb.core.label="inv1" org.eventb.core.predicate="lift_request_pool ∈ LIFTS ↔ FLOORS"/>
<org.eventb.core.variable de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="G" org.eventb.core.comment="Request pool for people inside a lift. That is, request pool for dropping people off at their destination." org.eventb.core.identifier="lift_request_pool"/>
<org.eventb.core.variable de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="H" org.eventb.core.comment="Request pool for people waiting for a lift, on each floor." org.eventb.core.identifier="floor_request_pool"/>
<org.eventb.core.invariant name="I" org.eventb.core.comment="Mapping between a floor and the direction that the person wants to go in" org.eventb.core.label="inv2" org.eventb.core.predicate="floor_request_pool ∈ FLOORS ↔ LIFT_DIRECTIONS"/>
<org.eventb.core.invariant name="J" org.eventb.core.comment="If someone is wants to go somewhere inside the lift, then the lift musn't be IDLE" org.eventb.core.label="inv3" org.eventb.core.predicate="∀lift·lift∈LIFTS∧card(ran({lift} ◁ lift_request_pool))&gt;0⇒lift_states(lift)≠IDLE"/>
<org.eventb.core.invariant name="L" org.eventb.core.comment="At least 1 lift can't be IDLE if there is a floor request in the request pool" org.eventb.core.label="inv4" org.eventb.core.predicate="card({lift ∣ lift_states(lift) ≠ IDLE}) &gt; 0 ∨ card(floor_request_pool) = 0"/>
</org.eventb.core.machineFile>
