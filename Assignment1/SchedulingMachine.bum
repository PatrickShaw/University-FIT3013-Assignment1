<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.machineFile org.eventb.core.configuration="org.eventb.core.fwd;de.prob.units.mchBase" version="5">
<org.eventb.core.event name="'" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="INITIALISATION">
<org.eventb.core.action name="'" org.eventb.core.assignment="lift_request_pool ≔ ∅" org.eventb.core.label="act10"/>
<org.eventb.core.action name="(" org.eventb.core.assignment="floor_request_pool ≔ ∅" org.eventb.core.label="act11"/>
</org.eventb.core.event>
<org.eventb.core.seesContext name="(" org.eventb.core.target="SchedulingContext"/>
<org.eventb.core.refinesMachine name=")" org.eventb.core.target="ButtonsMachine"/>
<org.eventb.core.variable de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="/" org.eventb.core.identifier="lift_states"/>
<org.eventb.core.variable de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="0" org.eventb.core.identifier="lift_movement_directions"/>
<org.eventb.core.variable de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="2" org.eventb.core.identifier="lift_door_states"/>
<org.eventb.core.variable de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="3" org.eventb.core.identifier="floor_doors_states"/>
<org.eventb.core.variable de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="4" org.eventb.core.identifier="lift_buttons_states"/>
<org.eventb.core.variable de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="E" org.eventb.core.identifier="lift_current_floor"/>
<org.eventb.core.variable de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="5" org.eventb.core.identifier="floor_buttons_states"/>
<org.eventb.core.event name="6" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="activate_lift">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="activate_lift"/>
<org.eventb.core.guard name="(" org.eventb.core.comment="Only allow activating a lift if it has a request assigned to it" org.eventb.core.label="grd2" org.eventb.core.predicate="lift ∈ dom(lift_request_pool)"/>
</org.eventb.core.event>
<org.eventb.core.event name="7" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="deactivate_lift">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="deactivate_lift"/>
<org.eventb.core.guard name="(" org.eventb.core.comment="Only allow deactivating a lift if it doesn't have anything to do" org.eventb.core.label="grd2" org.eventb.core.predicate="lift ∉ dom(lift_request_pool)"/>
</org.eventb.core.event>
<org.eventb.core.event name="8" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="start_lift">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="start_lift"/>
<org.eventb.core.guard name=")" org.eventb.core.comment="Only allow starting a lift if it has a service request to fullfill" org.eventb.core.label="grd6" org.eventb.core.predicate="lift ∈ dom(lift_request_pool)"/>
<org.eventb.core.guard name="(" org.eventb.core.comment="Disallow starting if the current floor is apart of a service request" org.eventb.core.label="grd7" org.eventb.core.predicate="lift ↦ lift_current_floor(lift) ∉ lift_request_pool"/>
</org.eventb.core.event>
<org.eventb.core.event name="O" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="stop_lift">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="stop_lift"/>
<org.eventb.core.guard name="(" org.eventb.core.comment="Only stop the lift if it's not servicing a request (or if it reaches the top or bottom floors)" org.eventb.core.label="grd2" org.eventb.core.predicate="lift ∉ dom(lift_request_pool) ∨&#13;&#10;lift_current_floor(lift) ∈ ran({lift} ◁ lift_request_pool) ∨ (&#13;&#10;  (lift_movement_directions(lift) = UP ⇒ lift_current_floor(lift) = TOP_FLOOR) ∧&#13;&#10;  (lift_movement_directions(lift) = DOWN ⇒ lift_current_floor(lift) = 0)&#13;&#10;)"/>
</org.eventb.core.event>
<org.eventb.core.event name=":" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="move_lift">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="move_lift"/>
<org.eventb.core.guard name=")" org.eventb.core.comment="Only allow movement if a lift has a service request" org.eventb.core.label="grd10" org.eventb.core.predicate="lift ∈ dom(lift_request_pool)" org.eventb.core.theorem="true"/>
<org.eventb.core.guard name="(" org.eventb.core.comment="If a lift is currently serving a request, then disallow movement if it's current floor is a target" org.eventb.core.label="grd11" org.eventb.core.predicate="lift ↦ lift_current_floor(lift) ∉ lift_request_pool"/>
<org.eventb.core.guard name="*" org.eventb.core.comment="If the lifts direction is up, then there must be a target floor above the lift for it to move" org.eventb.core.label="grd12" org.eventb.core.predicate="lift_movement_directions(lift) = UP ⇒ (∃x·x ∈ ran({lift} ◁ lift_request_pool) ∧ lift_current_floor(lift) &lt; x)"/>
<org.eventb.core.guard name="+" org.eventb.core.comment="Otherwise if the lifts direction is down, then there must be a target floor below the lift for it to move" org.eventb.core.label="grd13" org.eventb.core.predicate="lift_movement_directions(lift) = DOWN ⇒ (∃x·x ∈ ran({lift} ◁ lift_request_pool) ∧ lift_current_floor(lift) &gt; x)"/>
</org.eventb.core.event>
<org.eventb.core.event name=";" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="change_lift_direction">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="change_lift_direction"/>
<org.eventb.core.guard name=")" org.eventb.core.comment="If the lift is going up, then only change direction when every lift request is below the lift" org.eventb.core.label="grd5" org.eventb.core.predicate="lift_movement_directions(lift) = UP ⇒ (∀x·x ∈ ran({lift} ◁ lift_request_pool) ⇒ lift_current_floor(lift) &gt; x)"/>
<org.eventb.core.guard name="*" org.eventb.core.comment="If the lift is going down, then only change direction when every lift request is above the lift" org.eventb.core.label="grd6" org.eventb.core.predicate="lift_movement_directions(lift) = DOWN ⇒ (∀x·x ∈ ran({lift} ◁ lift_request_pool) ⇒ lift_current_floor(lift) &lt; x)"/>
</org.eventb.core.event>
<org.eventb.core.event name="=" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="open_lift_door">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="open_lift_door"/>
</org.eventb.core.event>
<org.eventb.core.event name="&gt;" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="close_lift_door">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="close_lift_door"/>
</org.eventb.core.event>
<org.eventb.core.event name="?" org.eventb.core.comment="Open the door and deactivate all requests that were associated with the floor" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="open_floor_door">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="open_floor_door"/>
<org.eventb.core.action name="(" org.eventb.core.assignment="lift_request_pool ≔ lift_request_pool ∖ {lift ↦ lift_current_floor(lift)}" org.eventb.core.label="act2"/>
</org.eventb.core.event>
<org.eventb.core.event name="@" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="close_floor_door">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="close_floor_door"/>
<org.eventb.core.guard name="(" org.eventb.core.comment="Only alow closing the door if the button for that floor has been deactivated" org.eventb.core.label="grd20000" org.eventb.core.predicate="lift_buttons_states(lift)(lift_current_floor(lift)) = INACTIVE"/>
</org.eventb.core.event>
<org.eventb.core.event name="B" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="activate_lift_button">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="activate_lift_button"/>
<org.eventb.core.action name="(" org.eventb.core.assignment="lift_request_pool ≔ (lift_request_pool ∖ {lift ↦ floor}) ∪ {lift ↦ floor}" org.eventb.core.label="act2"/>
</org.eventb.core.event>
<org.eventb.core.event name="D" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="deactivate_lift_button">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="deactivate_lift_button"/>
<org.eventb.core.action name="(" org.eventb.core.assignment="lift_request_pool ≔ lift_request_pool ∖ {lift ↦ lift_current_floor(lift)}" org.eventb.core.comment="Remove this button call from the request pool" org.eventb.core.label="act2"/>
</org.eventb.core.event>
<org.eventb.core.event name="A" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="activate_floor_button">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="activate_floor_button"/>
<org.eventb.core.action name="(" org.eventb.core.assignment="floor_request_pool ≔ (floor_request_pool ∖ {floor ↦ direction}) ∪ {floor ↦ direction}" org.eventb.core.label="act2"/>
</org.eventb.core.event>
<org.eventb.core.event name="C" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="deactivate_floor_button">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="deactivate_floor_button"/>
<org.eventb.core.action name="(" org.eventb.core.assignment="floor_request_pool ≔ floor_request_pool ∖ {floor ↦ direction}" org.eventb.core.label="act2"/>
</org.eventb.core.event>
<org.eventb.core.invariant name="F" org.eventb.core.comment="Mapping for each lift, to some destination floor" org.eventb.core.label="inv1" org.eventb.core.predicate="lift_request_pool ∈ LIFTS ↔ FLOORS"/>
<org.eventb.core.variable de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="G" org.eventb.core.identifier="lift_request_pool"/>
<org.eventb.core.variable de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="P" org.eventb.core.identifier="floor_request_pool"/>
<org.eventb.core.invariant name="Q" org.eventb.core.label="inv2" org.eventb.core.predicate="floor_request_pool ∈ FLOORS ↔ LIFT_DIRECTIONS"/>
<org.eventb.core.event name="R" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="assign_floor_request_to_lift">
<org.eventb.core.guard name="," org.eventb.core.label="grd4" org.eventb.core.predicate="floor ↦ direction ∈ floor_request_pool"/>
<org.eventb.core.guard name="'" org.eventb.core.label="grd5" org.eventb.core.predicate="lift ∈ LIFTS"/>
<org.eventb.core.parameter name="(" org.eventb.core.identifier="lift"/>
<org.eventb.core.guard name="-" org.eventb.core.comment="This monster guard ensures that the lift is&#13;&#10;1. Either idle, or already on it's way to the floor (and moving the same direction)&#13;&#10;2. The closest lift to the floor out of all lifts that satisfy (1)&#13;&#10;3. Of the highest priority out of all lifts that satisfy (1) and (2)" org.eventb.core.label="grd6" org.eventb.core.predicate="LIFT_PRIORITIES(lift) = max({−1} ∪ {y·y ∈ {x ∣ x ∈ LIFTS ∧&#13;&#10;  (&#13;&#10;    x ∉ dom(lift_request_pool) ∨&#13;&#10;    (&#13;&#10;      lift_movement_directions(lift) = direction ∧&#13;&#10;      (direction = UP ⇒ lift_current_floor(x) ≤ floor) ∧&#13;&#10;      (direction = DOWN ⇒ lift_current_floor(x) ≥ floor)&#13;&#10;    )&#13;&#10;  )} ∧&#13;&#10;&#13;&#10;  (lift_current_floor(y) &gt; floor ⇒ (lift_current_floor(y) − floor = min({x·x ∈ LIFTS ∧&#13;&#10;  (&#13;&#10;    lift_current_floor(x) &gt; floor ∧&#13;&#10;    (&#13;&#10;      x ∉ dom(lift_request_pool) ∨&#13;&#10;      (direction = DOWN ∧ lift_movement_directions(lift) = DOWN)&#13;&#10;    )&#13;&#10;  ) ∣ lift_current_floor(x) − floor}))) ∧&#13;&#10;&#13;&#10;  (lift_current_floor(y) &lt; floor ⇒ (floor − lift_current_floor(y) = min({x·x ∈ LIFTS ∧&#13;&#10;  (&#13;&#10;    lift_current_floor(x) &lt; floor ∧&#13;&#10;    (&#13;&#10;      x ∉ dom(lift_request_pool) ∨&#13;&#10;      (direction = UP ∧ lift_movement_directions(lift) = UP)&#13;&#10;    )&#13;&#10;  ) ∣ floor − lift_current_floor(x)})))&#13;&#10;&#13;&#10;∣ LIFT_PRIORITIES(y)})"/>
<org.eventb.core.action name="." org.eventb.core.assignment="floor_request_pool ≔ floor_request_pool ∖ {floor ↦ direction}" org.eventb.core.label="act2"/>
<org.eventb.core.action name="/" org.eventb.core.assignment="lift_request_pool ≔ (lift_request_pool ∖ {lift ↦ floor}) ∪ {lift ↦ floor}" org.eventb.core.label="act3"/>
<org.eventb.core.refinesEvent name="1" org.eventb.core.target="deactivate_floor_button"/>
</org.eventb.core.event>
<org.eventb.core.variable de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="S" org.eventb.core.identifier="total_distance_travelled"/>
<org.eventb.core.variable de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="T" org.eventb.core.identifier="total_distance_travelled_per_lift"/>
<org.eventb.core.variable de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="X" org.eventb.core.identifier="total_times_lift_doors_opened"/>
<org.eventb.core.variable de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="W" org.eventb.core.identifier="total_times_lift_doors_opened_per_lift"/>
<org.eventb.core.variable de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="U" org.eventb.core.identifier="total_times_floor_doors_opened"/>
<org.eventb.core.variable de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="V" org.eventb.core.identifier="total_times_floor_doors_opened_per_floor"/>
</org.eventb.core.machineFile>
